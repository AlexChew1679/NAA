1. create a migration file of
  rails g migration create_tasks.rb
2. create model task.rb
3. create tasks_controller.rb  or rails g controller Tasks new create
4. create tasks folder at view
5. put def new at tasks_controller
                          def new
                            @task = Task.new
                          end

  at views/tasks/new.html.erb
                                <h1> New Task </h1>

                                <%= simple_form_for (@task) do |f| %>  <=NOTE  u re assigning @task to Task.new at controller...
                                    <%= f.input :content %>
                                    <%= f.button :submit %>
                                <%end%>

  if you click submit, nothing will happen,

  now modify tasks_controller.rb

  class TasksController < ApplicationController

                                  def new
                                    @task = Task.new
                                  end

                                  def create
                                    @task = Task.new(tasks_params)
                                    @task.save

                                    redirect_to task_path(@task)
                                  end


                                private

                                  def tasks_params
                                    params.require(:task).permit(:content)
                                  end

                                end

  model/task.rb
                                class Task < ApplicationRecord
                                  validates :content, presence: true, length: {minimum: 5, maximum: 100}
                                end




      CREATE SHOW ACTION
      application.html.erb

                                      <!DOCTYPE html>
                                      <html>
                                        <head>
                                          <title>NAA</title>
                                          <%= csrf_meta_tags %>

                                          <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
                                          <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
                                        </head>

                                        <body>

                                          <%= render 'layouts/navbar' %>
                                          <% flash.each do |name,msg| %>
                                          <%=msg %>
                                          <%end%>

                                          <div class = 'container'>

                                          <%= yield %>
                                        </div>
                                        </body>
                                      </html>

    modify the tasks_controller.rb

    class TasksController < ApplicationController

                                      def new
                                        @task = Task.new
                                      end

                                      def create
                                        @task = Task.new(tasks_params)
                                         if @task.save
                                           flash[:notice] = "Task was successfully created"
                                           redirect_to task_path(@task)
                                         else
                                           render 'new'
                                        end
                                      end

                                      def show
                                          @task = Task.find(params[:id])
                                      end


                                    private

                                      def tasks_params
                                        params.require(:task).permit(:content)
                                      end

                                    end

  create views/tasks/show.html.erb

                                    <h1> Showing Task </h1>

                                    <strong>Content: </strong> <%= @task.content %>

RAILS ERROR
                                    ArgumentError in TasksController#update
                            wrong number of arguments (given 0, expected 1)

                            Extracted source (around line #27):


                              def update
                                @task = Task.find(params[:id])
                                if @task.update
                                  flash[:notice] = "Task was successfully updated"
                                  redirect_to task_path(@task)
                                else

      instead of this, change this

                                def update
                                  @task = Task.find(params[:id])
                                  if @task.update(tasks_params)  <= NOTE
                                    flash[:notice] = "Task was successfully updated"
                                    redirect_to task_path(@task)
                                  else
                                    render 'edit'
                                  end
                                end

NOTE: this is due there's a specific id , cause it is whitelisted


private

  def tasks_params
    params.require(:task).permit(:content)
  end

end

so it must be


CREATE UPDATE AND EDIT

                                      class TasksController < ApplicationController

                                        def new
                                          @task = Task.new
                                        end

                                        def create
                                          @task = Task.new(tasks_params)
                                           if @task.save
                                             flash[:notice] = "Task was successfully created"
                                             redirect_to task_path(@task)
                                           else
                                             render 'new'
                                          end
                                        end

                                        def show
                                            @task = Task.find(params[:id])
                                        end

                                        def edit
                                          @task = Task.find(params[:id])
                                        end

                                        def update
                                          @task = Task.find(params[:id])
                                          if @task.update(tasks_params)  <= NOTE AS ABOVE
                                            flash[:notice] = "Task was successfully updated"
                                            redirect_to task_path(@task)
                                          else
                                            render 'edit'
                                          end
                                        end


                                      private

                                        def tasks_params
                                          params.require(:task).permit(:content)
                                        end

                                      end

  CREATE views/tasks/edit.html.erb (copy from new.html.erb)

                                      <h2> Edit Task </h2>

                                      <% if @task.errors.any? %>
                                      <h4> Siao Liao, Jia Lat, SumTing Long</h4>
                                       <ul>
                                        <% @task.errors.full_messages.each do |msg| %>
                                      <li><%= msg %></li>
                                        <%end%>
                                      </ul>
                                      <%end%>

                                      <%= simple_form_for @task do |f| %>
                                          <%= f.input :content %>
                                          <%= f.button :submit %>

                                      <%end%>

    CREATE DESTROY   add this at tasks_controller.rb

                                    def destroy
                                      @task = Task.find(params[:id])
                                      @task.destroy
                                      flash[:notice] = "Todo was successfully deleted"
                                      redirect_to tasks_path
                                    end


    add this line at tasks/show.html.erb

      <td><%= link_to 'Delete',task_path(task), method: :delete, data: {confirm: "Are you sure?"} %> </td>


CREATE has_many AND belongs_to

rails g migration add_user_id_to_tasks user_id:integer


has_many :tasks, dependent: :destroy AT USER.RB
belongs_to :user  AT TASK.RB


modify tasks_controller.rb

                                    def index
                                      @tasks =  current_user.tasks              =>  #Task.all   before
                                    end

                                    def new
                                      @task = Task.new
                                    end

                                    def create
                                      @task = current_user.tasks.new(tasks_params)   =>       #Task.new(tasks_params)  before
                                       if @task.save
                                         flash[:notice] = "Task was successfully created"
                                         redirect_to task_path(@task)
                                       else
                                         render 'new'
                                      end
                                    end
